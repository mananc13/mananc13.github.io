{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/prototype/prototype-data.ts","webpack:///./src/app/prototype/prototype.component.css","webpack:///./src/app/prototype/prototype.component.html","webpack:///./src/app/prototype/prototype.component.ts","webpack:///./src/app/prototype/prototype.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \" <!-- Navbar -->\\n <app-nav></app-nav>\\n\\n <!-- Router Outlet - '/' = HomeComp -->\\n <router-outlet></router-outlet>\\n \\n \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Assignment';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { PrototypeComponent } from './prototype/prototype.component';\nimport { NavComponent } from './nav/nav.component';\n\nimport { ProductService } from './prototype/prototype.service';\n\n@NgModule({\n  imports: [ BrowserModule,\n                   FormsModule,\n                   AppRoutingModule\n                   ],\n  declarations: [ AppComponent,\n    PrototypeComponent,NavComponent\n ],\n  providers: [ ProductService ],\n  bootstrap:    [ AppComponent ]\n})\n\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, PreloadAllModules } from '@angular/router';\nimport { PrototypeComponent } from './prototype/prototype.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot([\n            { path: '', component: PrototypeComponent },\n            { path: '**', redirectTo: '', pathMatch: 'full' }\n        ] , { preloadingStrategy: PreloadAllModules })\n    ],\n    exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }","module.exports = \"/* Navbar */\\n.nav .navbar-nav {\\n    font-size: 15px;\\n  }\\n \\n \"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"/\\\">{{ appName }}</a>\\n      </div>\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\nappName:string\n  constructor() { }\n\n  ngOnInit() {\n    this.appName = \"Assignment\";\n  }\n\n\n}\n\n\n\n\n","import { Prototype } from './prototype';\n\nexport const PRODUCT_ITEMS: Prototype[] = [{\n    id: 'Researching',\n    name: 'BMW',\n    description: 'Rohan',\n    price: 4.99\n  }, {\n    id: 'Pending Approval',\n    name: 'AUDI',\n    description: 'Rahul',\n    price: 10.99\n  }, {\n    id: 'Declined',\n    name: 'Mercedes',\n    description: 'Aman',\n    price: 5.99\n  }]","module.exports = \"/* Navbar */\\n.nav .navbar-nav {\\n    font-size: 15px;\\n  }\\ntd{\\n    text-align: center;\\n  }\\n  \\n\\n  \"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h1>Prototype</h1>\\n      <table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"text-center\\\">Status</th>\\n        <th class=\\\"text-center\\\">Company Info</th>\\n        <th class=\\\"text-center\\\">Key Contacts</th>\\n        <th class=\\\"text-center\\\">Financial Performance</th>\\n        <th class=\\\"text-center\\\">&nbsp;</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let product of products;let i = index ; let last = last; let first = first\\\">\\n        <td>{{ product.id }}</td>\\n        <td>{{ product.name }}</td>\\n        <td>{{ product.description }}</td>\\n        <td>{{ product.price | currency}}</td>\\n        <td>\\n          <button class=\\\"btn btn-info\\\" \\n                        (click)=\\\"showEditProductForm(i,product)\\\">\\n                       <i class=\\\"fa fa-edit\\\"></i>\\n              </button>\\n          <button class=\\\"btn btn-danger\\\"\\n                       (click)=\\\"removeProduct(product)\\\">\\n                       <i class=\\\"fa fa-minus\\\"></i>\\n            </button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <button class=\\\"btn btn-success\\\"\\n               (click)=\\\"showAddProductForm()\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n  <br />\\n  <br />\\n\\n  <form *ngIf=\\\"productForm\\\">\\n    <h2>Add New Field</h2>\\n    <p>Status: <select name=\\\"id\\\" \\n      [(ngModel)]=\\\"newProduct.id\\\" required>\\n        <option value=\\\"Researching\\\">Researching</option>\\n        <option value=\\\"Pending Approval\\\">Pending Approval</option>\\n        <option value=\\\"Approved\\\">Approved</option>\\n        <option value=\\\"Declined\\\">Declined</option>\\n      </select>\\n    </p>\\n    <p>Company Info: <input type=\\\"text\\\"\\n                                 name=\\\"name\\\"\\n                                 [(ngModel)]=\\\"newProduct.name\\\" required/></p>\\n    <p>Key Contacts: <input type=\\\"text\\\"\\n                                          name=\\\"description\\\"\\n                                          [(ngModel)]=\\\"newProduct.description\\\" required/></p>\\n    <p>Financial Performance: <input type=\\\"number\\\"\\n                                name=\\\"price\\\"\\n                                [(ngModel)]=\\\"newProduct.price\\\" required/></p>\\n    <p>\\n      <button type=\\\"button\\\"\\n                   class=\\\"btn btn-primary\\\"\\n                   (click)=\\\"saveProduct(newProduct)\\\">Submit</button>\\n      <button type=\\\"button\\\"\\n                   class=\\\"btn btn-warning\\\"\\n                   (click)=\\\"cancelNewProduct()\\\">Cancel</button>\\n    </p>\\n   </form>\\n\\n    <form *ngIf=\\\"editProductForm\\\">\\n    <h2>Edit Details</h2>\\n    <p>Status: <select name=\\\"id\\\"\\n      [(ngModel)]=\\\"editedProduct.id\\\" >\\n        <option value=\\\"Researching\\\">Researching</option>\\n        <option value=\\\"Pending Approval\\\">Pending Approval</option>\\n        <option value=\\\"Approved\\\">Approved</option>\\n        <option value=\\\"Declined\\\">Declined</option>\\n      </select></p>\\n    <p>Company Info: <input type=\\\"text\\\"\\n                                 name=\\\"name\\\"\\n                                 [(ngModel)]=\\\"editedProduct.name\\\" /></p>\\n    <p>Key Contacts: <input type=\\\"text\\\"\\n                                          name=\\\"description\\\"\\n                                          [(ngModel)]=\\\"editedProduct.description\\\" /></p>\\n    <p>Financial Performance: <input type=\\\"number\\\"\\n                                name=\\\"price\\\"\\n                                [(ngModel)]=\\\"editedProduct.price\\\" /></p>\\n    <p>\\n      <button  type=\\\"button\\\"\\n                   class=\\\"btn btn-primary\\\"\\n                   (click)=\\\"updateProduct(editedProduct)\\\">Submit</button>\\n      <button type=\\\"button\\\"\\n                   class=\\\"btn btn-warning\\\"\\n                   (click)=\\\"cancelEdits()\\\">Cancel</button>\\n    </p>\\n   </form>\\n  </div>\\n</div>\\n\"","\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { ProductService } from './prototype.service';\nimport { Prototype } from './prototype';\n\n\n@Component({\n  selector: 'app-prototype',\n  templateUrl: './prototype.component.html',\n  styleUrls: ['./prototype.component.css']\n})\n\nexport class PrototypeComponent implements OnInit {\n  products: Prototype[];\n  productForm: boolean = false;\n  editProductForm: boolean = false;\n  isNewForm: boolean;\n  newProduct: any = {};\n  editedProduct: any = {};\nindex:string;\n  constructor(private _productService: ProductService) { }\n\n  ngOnInit() {\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.products = this._productService.getProductsFromData();\n  }\n\n  showEditProductForm(index,product: Prototype) {\n    this.productForm = false;\n    if(!product) {\n      this.productForm = false;\n      return;\n    }\n    console.log(index, \"index\")\n    this.editProductForm = true;\n    console.log(product, \"product\")\n    this.index = index;\n    this.editedProduct = Object.assign({},product);\n    console.log(this.editedProduct, \"product\")\n   \n  }\n\n  showAddProductForm() {\n    this.editProductForm = false;\n    // resets form if edited product\n    if(this.products.length) {\n      this.newProduct = {};\n    }\n    this.productForm = true;\n    this.isNewForm = true;\n  }\n\n  saveProduct(product: Prototype) {\n    if(this.isNewForm) {\n      // add a new product\n      this._productService.addProduct(product);\n    }\n    this.productForm = false;\n  }\n\n  removeProduct(product: Prototype) {\n    this._productService.deleteProduct(product);\n  }\n\n  updateProduct() {\n    this._productService.updateProduct(this.index,this.editedProduct);\n    this.editProductForm = false;\n    this.editedProduct = {};\n  }\n\n  cancelNewProduct() {\n    this.newProduct = {};\n    this.productForm = false;\n  }\n\n  cancelEdits() {\n    this.editedProduct = {};\n    this.editProductForm = false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Prototype } from './prototype';\nimport { PRODUCT_ITEMS } from './prototype-data';\nimport { findIndex } from 'lodash';\n\n@Injectable()\nexport class ProductService {\n  private pItems = PRODUCT_ITEMS;\n\n  getProductsFromData(): Prototype[] {\n    console.log(this.pItems);\n    return this.pItems\n  }\n\n  addProduct(product: Prototype) {\n    this.pItems.push(product);\n    console.log(this.pItems);\n  }\n\n  updateProduct(index,product: Prototype) {\n   console.log(product,\"string\");\n    this.pItems[index] = product;\n  }\n\n  deleteProduct(product: Prototype) {\n    this.pItems.splice(this.pItems.indexOf(product), 1);\n    console.log(this.pItems);\n  }\n\n}\n\n  \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}